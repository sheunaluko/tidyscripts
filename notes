TIDYSCRIPTS NOTES
-----------------

Goals:
- web audio expertise 
- remba
- documentation of the firebase/firestore user data api
- cryptocurrency data frequency analysis (spectrogram generations - large numbers at a time in a parameter grid)
- add guassian audio visualization 


Currently working on:

Sep 6: implemented gemini chat (large context window can fit entire tidyscripts documentation in it)
In the repl do this: 
   jtext = node.io.read_file("/Users/sheunaluko/dev/tidyscripts/apps/docs/jdoc.json")
   chat = node.apis.gemini.chat.get_chat()
   await chat(`Here is the entire documentation of the tidyscripts library in json format: -beginJsonText ${jtext} -endJsonText. I would like to ask you a question about the library now.`

Note: the GEMINI_API_KEY env var has to be set

---



** NOTE ** Within Autocare.tsx there are now hp_client and analyze_client which are linked to
autocare_hp and autocare_analyze ORIGIN_ID's respectively

Thus to implement the checkmark below I should implement:

     - search a collection and filter by KEY and only return certain fields
     - then create function for searching PARTICULAR collection and filter by ORIGIN_ID
         and only return the ORIGIN_ID , ARGS , (necessary to populate below) 

[ ] a UI Component (for example  can search for ORIGIN_ID which match its own to see which queries it has asked
          - UI can automatically know how to "autofill" possible user requests (prior queries can be clicked)
	  - CACHED entities can be deleted
	  - PAY WALL can still be supported

[ ] in widgets/util implement export async function get_individual_dashboard_info(hp : string,  dashboard_name : string) { }
[ ] in widgets/util transform_hp_to_fhir()    [ use this to build the data ui :)  ] 





Other to work on =>

[ ] test using llama3 model with open devin to save costs
[ ] extract all dreams and store


[ ]  allow user to configure settings 

[ ] Implementing presence
- Could do this using a document => stats/active_clients in  Firestore
  - and the vercel api/active_client endpoint 
  - need a way to get a unique identifier from the vercel client request
  - looks like I can use const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress
    	  - but also may want to include the (UserAgent) information as well (or else multiple devices behind same IP will not show) 
  - First I get the ID; and a timestamp
    - The next step is retrieving the JSON object that maps ID => timestamp; (retrieve usign Firestore admin sdk)
      	  - update it with the current ID,timestampe
	  - For each expired (T x 2) timestamp delete the ID,timestamp combo
	  - Then return the JSON object back to stats/active_clients document
  - In the layout there is a setInterval that runs every (T) seconds; and calls the api/active_client endpoint
=> The above should more or less work 

1. Can utilize the .env files to configure the "localhost" vs "tidyscripts.com" api endpoints for seamless api testing while in development mode.
2. tsconfig has "skipLibCheck" to resolve langchain type error
3. consider getting rid of RAMDA ... it appears that it needs 0.28.0 and @types 0.28.25  in order to be compatible with typescript 5.3.3 !!!
   -> I ended up changing the typescript version multiple times so this may not be relevant



DONE:

[x] fix mobile version of app and mobile login etc (will have to debug on mobile device)
[x] -> fixed/implemented the utility firebase.util functions